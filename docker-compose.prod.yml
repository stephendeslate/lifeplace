services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend/static:/app/static
      - ./backend/media:/app/media
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/lifeplace
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=lifeplace.com,www.lifeplace.com,admin.lifeplace.com
      - CORS_ALLOWED_ORIGINS=https://lifeplace.com,https://www.lifeplace.com,https://admin.lifeplace.com
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    networks:
      - lifeplace-network
    restart: unless-stopped

  # Build stage for client portal
  client-builder:
    build:
      context: ./frontend/client-portal
      dockerfile: Dockerfile.prod
      target: build
    volumes:
      - client_build:/app/build
    environment:
      - REACT_APP_API_URL=https://lifeplace.com/api
    networks:
      - lifeplace-network

  # Build stage for admin CRM
  admin-builder:
    build:
      context: ./frontend/admin-crm
      dockerfile: Dockerfile.prod
      target: build
    volumes:
      - admin_build:/app/build
    environment:
      - REACT_APP_API_URL=https://admin.lifeplace.com/api
    networks:
      - lifeplace-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - client_build:/usr/share/nginx/html/client
      - admin_build:/usr/share/nginx/html/admin
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - client-builder
      - admin-builder
    networks:
      - lifeplace-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=lifeplace
    networks:
      - lifeplace-network
    restart: unless-stopped

  redis:
    image: redis:7
    networks:
      - lifeplace-network
    restart: unless-stopped

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/lifeplace
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    command: celery -A core worker -l info
    networks:
      - lifeplace-network
    restart: unless-stopped

networks:
  lifeplace-network:
    driver: bridge

volumes:
  postgres_data:
  client_build:
  admin_build:
