# Generated by Django 5.1.7 on 2025-03-28 22:16

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contracts", "0001_initial"),
        ("events", "0002_alter_eventtype_description_event_eventfile_and_more"),
        ("products", "0001_initial"),
        ("questionnaires", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="QuoteTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255)),
                (
                    "introduction",
                    models.TextField(
                        blank=True,
                        help_text="Introduction text to appear at beginning of quotes",
                    ),
                ),
                ("terms_and_conditions", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "contract_templates",
                    models.ManyToManyField(blank=True, to="contracts.contracttemplate"),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="events.eventtype",
                    ),
                ),
                (
                    "questionnaires",
                    models.ManyToManyField(
                        blank=True, to="questionnaires.questionnaire"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QuoteTemplateProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("is_required", models.BooleanField(default=False)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productoption",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sales.quotetemplate",
                    ),
                ),
            ],
            options={
                "unique_together": {("template", "product")},
            },
        ),
        migrations.AddField(
            model_name="quotetemplate",
            name="products",
            field=models.ManyToManyField(
                through="sales.QuoteTemplateProduct", to="products.productoption"
            ),
        ),
        migrations.CreateModel(
            name="EventQuote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("version", models.PositiveIntegerField(default=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SENT", "Sent"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                            ("EXPIRED", "Expired"),
                        ],
                        max_length=20,
                    ),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("valid_until", models.DateField()),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("terms_and_conditions", models.TextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quotes",
                        to="events.event",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sales.quotetemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at", "-version"],
                "unique_together": {("event", "version")},
            },
        ),
    ]
