# Generated by Django 5.1.7 on 2025-03-26 22:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("events", "0001_initial"),
        ("products", "0001_initial"),
        ("workflows", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="eventtype",
            name="description",
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("LEAD", "Lead"),
                            ("CONFIRMED", "Confirmed"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="LEAD",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("lead_source", models.CharField(blank=True, max_length=50)),
                ("last_contacted", models.DateTimeField(blank=True, null=True)),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("UNPAID", "Unpaid"),
                            ("PARTIALLY_PAID", "Partially Paid"),
                            ("PAID", "Paid"),
                        ],
                        default="UNPAID",
                        max_length=20,
                    ),
                ),
                (
                    "total_amount_due",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_stage",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workflows.workflowstage",
                    ),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="events.eventtype",
                    ),
                ),
                (
                    "workflow_template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workflows.workflowtemplate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CONTRACT", "Contract Document"),
                            ("QUOTE", "Quote/Proposal"),
                            ("PAYMENT", "Payment Document"),
                            ("REQUIREMENTS", "Requirements Doc"),
                            ("PHOTO", "Photo"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="event_files/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                ]
                            )
                        ],
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("mime_type", models.CharField(max_length=100)),
                ("size", models.PositiveIntegerField()),
                ("version", models.PositiveIntegerField(default=1)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="events.event",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at", "-version"],
            },
        ),
        migrations.CreateModel(
            name="EventProductOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("final_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "num_participants",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("num_nights", models.PositiveIntegerField(blank=True, null=True)),
                ("excess_hours", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_products",
                        to="events.event",
                    ),
                ),
                (
                    "product_option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.productoption",
                    ),
                ),
            ],
            options={
                "unique_together": {("event", "product_option")},
            },
        ),
        migrations.AddField(
            model_name="event",
            name="product_options",
            field=models.ManyToManyField(
                through="events.EventProductOption", to="products.productoption"
            ),
        ),
        migrations.CreateModel(
            name="EventFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "overall_rating",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("categories", models.JSONField(default=dict)),
                ("comments", models.TextField(blank=True)),
                ("testimonial", models.TextField(blank=True)),
                ("is_public", models.BooleanField(default=False)),
                ("response", models.TextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="events.event",
                    ),
                ),
                (
                    "response_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback_responses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("event", "submitted_by"),
                        name="unique_event_feedback_per_user",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="EventTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("due_date", models.DateTimeField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("completion_notes", models.TextField(blank=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("is_visible_to_client", models.BooleanField(default=False)),
                ("requires_client_input", models.BooleanField(default=False)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="completed_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dependencies",
                    models.ManyToManyField(
                        blank=True,
                        related_name="dependent_tasks",
                        to="events.eventtask",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="events.event",
                    ),
                ),
                (
                    "workflow_stage",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workflows.workflowstage",
                    ),
                ),
            ],
            options={
                "ordering": ["due_date", "priority"],
                "indexes": [
                    models.Index(
                        fields=["event", "status", "due_date"],
                        name="events_even_event_i_954331_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="EventTimeline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("STATUS_CHANGE", "Status Changed"),
                            ("STAGE_CHANGE", "Stage Changed"),
                            ("QUOTE_CREATED", "Quote Created"),
                            ("QUOTE_UPDATED", "Quote Updated"),
                            ("QUOTE_ACCEPTED", "Quote Accepted"),
                            ("CONTRACT_SENT", "Contract Sent"),
                            ("CONTRACT_SIGNED", "Contract Signed"),
                            ("PAYMENT_RECEIVED", "Payment Received"),
                            ("NOTE_ADDED", "Note Added"),
                            ("FILE_UPLOADED", "File Uploaded"),
                            ("TASK_COMPLETED", "Task Completed"),
                            ("FEEDBACK_RECEIVED", "Feedback Received"),
                            ("CLIENT_MESSAGE", "Client Message"),
                            ("SYSTEM_UPDATE", "System Update"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("action_data", models.JSONField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "actor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="event_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timeline",
                        to="events.event",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["event", "action_type", "-created_at"],
                        name="events_even_event_i_35b2de_idx",
                    )
                ],
            },
        ),
    ]
